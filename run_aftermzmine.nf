#!/usr/bin/env nextflow

/**
    Metabolomics Pipeline for Suptercomputers (MPS)
    Copyright (C) lemas-research-group          
          
    This script is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This script is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this script.  If not, see <http://www.gnu.org/licenses/>.
    
    For any bugs or problems found, please contact us at
    - [email placeholder]; 
    - [github placeholder]
*/

// Those variable names which are all uppercase are channel names

version='0.0.0'
timestamp='20190916'

MZMINE = Channel.fromPath(params.mzmine_dir, type: 'dir') // The location of folder of MzMine
MZMINE.into{POS_MZMINE; NEG_MZMINE} // Duplicate the MZMINE chennel into two channels, one of which deals with positive sample while the other deals with negative sample.
BATCHFILE_GENERATOR = Channel.fromPath(params.batchfile_generator) // This channel stores Python code (~/src/batchfile_generator.py) for generating MzMine batchfile, which enables us to run MzMine in batch mode. 

MZMINE_RESULT_EXTRACTION = Channel.fromPath(params.mzmine_result_extraction) // This channel stores Python code for formatting the result generated by MzMine enabling the intermidiate result to be feeded appropriately into background subtraction code.

POS_DATA_DIR = Channel.fromPath(params.input_dir_pos, type: 'dir') // Location of folder storing positive data
NEG_DATA_DIR = Channel.fromPath(params.input_dir_neg, type: 'dir') // Location of folder storing negative data

PYTHON_PCA = Channel.fromPath(params.python_pca) // Chennel of Python code for principle component analysis
PYTHON_PCA.into{PYTHON_PCA_NOBG; PYTHON_PCA_WITHBG} // Duplicate the above chennel to two channels, one the them processes result without background substraction, the other one processes processes result with background subtraction.

PYTHON_HCLUSTERING = Channel.fromPath(params.python_hclustering) // Chennel of Python code for hierarchical clustering
PYTHON_HCLUSTERING.into{PYTHON_HCLUSTERING_NOBG; PYTHON_HCLUSTERING_WITHBG}

PYTHON_DATA_INFO = Channel.fromPath(params.data_info) // Python code for generating MultiQC file regarding data information including file name and file size.
// PYTHON_PEAK_NUMBER_COMPARISON = Channel.fromPath(params.peak_number_comparison_path) // Python code for generating MultiQC file ragarding peak numbers for different background subtraction threshold.

// Following is Python code for background subtraction.
PYTHON_BS = Channel.fromPath(params.python_bs)

POS_NOBG = Channel.fromPath(params.pos_mzmine_peak_output)
POS_NOBG.into{POS_NOBG_FOR_BS; POS_NOBG_FOR_PCA; POS_NOBG_FOR_HCLUSTERING}
NEG_NOBG = Channel.fromPath(params.neg_mzmine_peak_output)
NEG_NOBG.into{NEG_NOBG_FOR_BS; NEG_NOBG_FOR_PCA; NEG_NOBG_FOR_HCLUSTERING}

// Design files for positive data and negative data.
POS_DESIGN = Channel.fromPath(params.POS_design_path)
POS_DESIGN.into{POS_DESIGN_FOR_BS; POS_DESIGN_FOR_PCA_NOBG; POS_DESIGN_FOR_PCA_WITHBG; POS_DESIGN_FOR_HCLUSTERING_NOBG; POS_DESIGN_FOR_HCLUSTERING_WITHBG;}
NEG_DESIGN = Channel.fromPath(params.NEG_design_path)
NEG_DESIGN.into{NEG_DESIGN_FOR_BS; NEG_DESIGN_FOR_PCA_NOBG; NEG_DESIGN_FOR_PCA_WITHBG; NEG_DESIGN_FOR_HCLUSTERING_NOBG; NEG_DESIGN_FOR_HCLUSTERING_WITHBG;}

// Pre-build MultiQC report information
// EXPERIMENTS_INFO = Channel.fromPath(params.experiments_info)
// MQC_CONFIG = Channel.fromPath(params.mqc_config)

// Result files used by MultiQC to generate report.
// MQC_DIR = Channel.fromPath(params.mqc_dir, type: 'dir')

/**
    Prints version when asked for
*/

if (params.version) {
    System.out.println("")
    System.out.println("METAGENOMIC PIPELINE FOR SUPERCOMPUTERS (MPS) - Version: $version ($timestamp)")
    exit 1
}

/**
    Prints help when asked for
*/

if (params.help) {
    System.out.println("")
    System.out.println("Metabolomics Pipeline for Suptercomputers (MPS) - Version: $version ($timestamp)")
    System.out.println("This pipeline is distributed in the hope that it will be useful")
    System.out.println("but WITHOUT ANY WARRANTY. See the GNU GPL v3.0 for more details.")
    System.out.println("")
    System.out.println("Please report comments and bugs to alessia.visconti@kcl.ac.uk")
    System.out.println("or at https://github.com/GalaxyDream/metabolomics_data_processing/issues.")
    System.out.println("Check https://github.com/GalaxyDream/metabolomics_data_processing for updates, and refer to")
    System.out.println("[wiki placeholder]")
    System.out.println("")
    System.out.println("Usage:  ")
    System.out.println("   nextflow run.nf [options] -with-docker galaxydream/mzmine_oldversion")
    System.out.println("")
    System.out.println("Arguments (it is mandatory to change `input_file` and `mzmine_dir` before running:")
    System.out.println("----------------------------- common parameters ----------------------------------")
    System.out.println("    --version                               whether to show version information or not, default is null")
    System.out.println("    --help                                  whether to show help information or not, default is null")
    System.out.println("    --input_dir_pos                         location of your input metabolomics data (positive part) folder")
    System.out.println("    --input_dir_neg                         location of your input metabolomics data (negative part) folder")
    System.out.println("    --mzmine_dir                            location of your MzMine software, here we use MzMine-2.28")
    System.out.println("    --library                               location of your customized library for matching matabolites")
    System.out.println("    --pos_config                            location of generated MzMine batchfile for positive data")
    System.out.println("    --neg_config                            location of generated MzMine batchfile for negative data")
    System.out.println("    --batchfile_generator                   location of the Python code for generating MzMine batchfile")
    System.out.println("    --mzmine_result_extraction              location of the Python code for reformating MzMine processed result so that those result files can be input appropriately to R scripts for background subtraction")
    System.out.println("    --raw_stats_merge_path                  location of the Python code for merging files of raw intension and the corresponding stats")
    System.out.println("    --venn_path                             location of the Python code for generating venn diagram")
    System.out.println("    --python_pca_path                       location of the Python code for generating PCA analysis result")
    System.out.println("    --data_info                             location of the Python code for generating file regarding data information that can be parsed by MultiQC")
    System.out.println("    --peak_number_comparison_path           location of the Python code for generating file that can be parsed by MultiQC regarding identified number of peaks corresponding to different background subtraction threshold")
    System.out.println("    --R_01_path                             Part of the R script for background subtraction")
    System.out.println("    --R_02_threshold_path                   Part of the R script for background subtraction")
    System.out.println("    --R_02_blankbased_path                  Part of the R script for background subtraction")
    System.out.println("    --R_03_anova_path                       Part of the R script for background subtraction")
    System.out.println("    --R_03_kruskalwallis_path               Part of the R script for background subtraction")
    System.out.println("    --R_04_path                             Part of the R script for background subtraction")
    System.out.println("    --mqc_dir                               path of the folder containing all files that need to be parsed by MultiQC to generate the report")
    System.out.println("    --pos_data_info_mqc                     name of the file ending with '.yaml' regarding positive data information that can be parsed by MultiQC")
    System.out.println("    --neg_data_info_mqc                     name of the file ending with '.yaml' regarding negative data information that can be parsed by MultiQC")
    System.out.println("    --POS_design_path                       location of the input file design file for positive data background subtraction")
    System.out.println("    --NEG_design_path                       location of the input file design file for negative data background subtraction")
    System.out.println("    --pos_nobg_ready                        name of the positive peak detection result (csv file) without background subtraction")
    System.out.println("    --neg_nobg_ready                        name of the negative peak detection result (csv file) without background subtraction")
    System.out.println("    --pos_005_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 005")
    System.out.println("    --neg_005_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 005")
    System.out.println("    --pos_100_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 100")
    System.out.println("    --neg_100_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 100")
    System.out.println("    --pos_200_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 200")
    System.out.println("    --neg_200_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 200")
    System.out.println("Please refer to nextflow.config for more options.")
    System.out.println("")
    System.out.println("Container:")
    System.out.println("    Docker image to use with -with-docker|-with-singularity options is")
    System.out.println("    'docker://galaxydream/bioconductor_metabolomics'")
    System.out.println("")
    System.out.println("MPS supports mzXML format files.")
    System.out.println("")
    exit 1
}

// Prepare data information for multiQC.
process mqc_data_info {

    publishDir './results/mqc/', mode: 'copy'

    input:
    file get_data_info from PYTHON_DATA_INFO
    file pos_data_dir from POS_DATA_DIR
    file neg_data_dir from NEG_DATA_DIR


    // POS_DATA and NEG_DATA are channels containing filtered POS and NEG data, which are ready to be input to R codes.
    output:
    file params.pos_data_info_mqc into POS_DATA_INFO_MQC
    file params.neg_data_info_mqc into NEG_DATA_INFO_MQC

    shell:
    """
    python3 ${get_data_info} -i ${pos_data_dir} -o $params.pos_data_info_mqc -n p &&
    python3 ${get_data_info} -i ${neg_data_dir} -o $params.neg_data_info_mqc -n n
    """
}

// Background subtraction
process blank_subtraction {

    input:
    file python_bs from PYTHON_BS
    file data_pos from POS_NOBG_FOR_BS
    file pos_design from POS_DESIGN_FOR_BS
    file data_neg from NEG_NOBG_FOR_BS
    file neg_design from NEG_DESIGN_FOR_BS

    output:
    file params.pos_data_withbg into POS_DATA_WITHBG
    file params.neg_data_withbg into NEG_DATA_WITHBG

    shell:
    """   
    python3 ${python_bs} -i ${data_pos} -d ${pos_design} -o ${params.pos_data_withbg} &&
    python3 ${python_bs} -i ${data_neg} -d ${neg_design} -o ${params.neg_data_withbg} 

    """
}

// split channel content for multiple-time use
POS_DATA_WITHBG.into{POS_WITHBG_FOR_PCA; POS_WITHBG_FOR_HCLUSTERING}
NEG_DATA_WITHBG.into{NEG_WITHBG_FOR_PCA; NEG_WITHBG_FOR_HCLUSTERING}

// process for PCA of "no background subtraction" results
process pca_nobg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file data_pos from POS_NOBG_FOR_PCA
    file pos_design from POS_DESIGN_FOR_PCA_NOBG
    file data_neg from NEG_NOBG_FOR_PCA
    file neg_design from NEG_DESIGN_FOR_PCA_NOBG
    file python_pca from PYTHON_PCA_NOBG

    output:
    file params.pca_pos_nobg into PCA_POS_NOBG
    file params.pca_neg_nobg into PCA_NEG_NOBG

    shell:
    """   
    python3 ${python_pca} -i ${data_pos} -d ${pos_design} -o ${params.pca_pos_nobg} -n p &&
    python3 ${python_pca} -i ${data_neg} -d ${neg_design} -o ${params.pca_neg_nobg} -n n

    """

}

// process for PCA of "with background subtraction" results, here we use 100 as the threshold of background subtraction.
process pca_withbg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file data_pos from POS_WITHBG_FOR_PCA
    file pos_design from POS_DESIGN_FOR_PCA_WITHBG
    file data_neg from NEG_WITHBG_FOR_PCA
    file neg_design from NEG_DESIGN_FOR_PCA_WITHBG
    file python_pca from PYTHON_PCA_WITHBG

    output:
    file params.pca_pos_withbg into PCA_POS_WITHBG
    file params.pca_neg_withbg into PCA_NEG_WITHBG

    shell:
    """   
    python3 ${python_pca} -i ${data_pos} -d ${pos_design} -o ${params.pca_pos_withbg} -n p &&
    python3 ${python_pca} -i ${data_neg} -d ${neg_design} -o ${params.pca_neg_withbg} -n n

    """

}

// process for hierarchical clustering of "no background subtraction" results
process h_clustering_nobg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file data_pos from POS_NOBG_FOR_HCLUSTERING
    file pos_design from POS_DESIGN_FOR_HCLUSTERING_NOBG
    file data_neg from NEG_NOBG_FOR_HCLUSTERING
    file neg_design from NEG_DESIGN_FOR_HCLUSTERING_NOBG
    file python_hclustering from PYTHON_HCLUSTERING_NOBG

    output:
    file params.hclustering_pos_nobg into HCLUSTERING_POS_NOBG
    file params.hclustering_neg_nobg into HCLUSTERING_NEG_NOBG

    shell:
    """   
    python3 ${python_hclustering} -i ${data_pos} -d ${pos_design} -o ${params.hclustering_pos_nobg} -n p &&
    python3 ${python_hclustering} -i ${data_neg} -d ${neg_design} -o ${params.hclustering_neg_nobg} -n n

    """

}

// process for hierarchical clustering of "with background subtraction" results, here we use 100 as the threshold of background subtraction.
process h_clustering_withbg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file data_pos from POS_WITHBG_FOR_HCLUSTERING
    file pos_design from POS_DESIGN_FOR_HCLUSTERING_WITHBG
    file data_neg from NEG_WITHBG_FOR_HCLUSTERING
    file neg_design from NEG_DESIGN_FOR_HCLUSTERING_WITHBG
    file python_hclustering from PYTHON_HCLUSTERING_WITHBG

    output:
    file params.hclustering_pos_withbg into HCLUSTERING_POS_WITHBG
    file params.hclustering_neg_withbg into HCLUSTERING_NEG_WITHBG

    shell:
    """   
    python3 ${python_hclustering} -i ${data_pos} -d ${pos_design} -o ${params.hclustering_pos_withbg} -n p &&
    python3 ${python_hclustering} -i ${data_neg} -d ${neg_design} -o ${params.hclustering_neg_withbg} -n n

    """

}