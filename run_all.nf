#!/usr/bin/env nextflow

/**
    Metabolomics Pipeline for Suptercomputers (MPS)
    Copyright (C) lemas-research-group          
          
    This script is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This script is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this script.  If not, see <http://www.gnu.org/licenses/>.
    
    For any bugs or problems found, please contact us at
    - [email placeholder]; 
    - [github placeholder]
*/

// Those variable names which are all uppercase are channel names

version='0.0.0'
timestamp='20190916'

MZMINE = Channel.fromPath(params.mzmine_dir, type: 'dir') // The location of folder of MzMine
MZMINE.into{POS_MZMINE; NEG_MZMINE} // Duplicate the MZMINE chennel into two channels, one of which deals with positive sample while the other deals with negative sample.
BATCHFILE_GENERATOR = Channel.fromPath(params.batchfile_generator) // This channel stores Python code (~/src/batchfile_generator.py) for generating MzMine batchfile, which enables us to run MzMine in batch mode. 

MZMINE_RESULT_EXTRACTION = Channel.fromPath(params.mzmine_result_extraction) // This channel stores Python code for formatting the result generated by MzMine enabling the intermidiate result to be feeded appropriately into background subtraction code.

POS_DATA_DIR = Channel.fromPath(params.input_dir_pos, type: 'dir') // Location of folder storing positive data
NEG_DATA_DIR = Channel.fromPath(params.input_dir_neg, type: 'dir') // Location of folder storing negative data

PYTHON_PCA = Channel.fromPath(params.python_pca_path) // Chennel of Python code for principle component analysis
PYTHON_PCA.into{PYTHON_PCA_NOBG; PYTHON_PCA_WITHBG} // Duplicate the above chennel to two channels, one the them processes result without background substraction, the other one processes processes result with background subtraction.
PYTHON_RAW_STATS_MERGE = Channel.fromPath(params.raw_stats_merge_path) // Python code (~/src/raw_stats_merge.py) for merging files regarding raw intension and stats regarding them into one file.
PYTHON_RAW_STATS_MERGE.into{PYTHON_RAW_STATS_MERGE_NOBG; PYTHON_RAW_STATS_MERGE_WITHBG} // Duplicate the above channel into two, one of them is used for files without background subtraction, the other one is used for files with background subtraction.
PYTHON_VENN = Channel.fromPath(params.venn_path) // Python code for generating venn diagram.
PYTHON_VENN.into{PYTHON_VENN_NOBG; PYTHON_VENN_WITHBG} // Duplicate the above channel into two, one of them is used for files without background subtraction, the other one is used for files with background subtraction.
PYTHON_H_CLUSTERING = Channel.fromPath(params.python_h_clustering)
PYTHON_H_CLUSTERING.into{PYTHON_H_CLUSTERING_NOBG; PYTHON_H_CLUSTERING_WITHBG}
PYTHON_BARPLOT = Channel.fromPath(params.python_barplot)
PYTHON_BARPLOT.into{PYTHON_BARPLOT_NOBG; PYTHON_BARPLOT_WITHBG}

PYTHON_DATA_INFO = Channel.fromPath(params.data_info) // Python code for generating MultiQC file regarding data information including file name and file size.
PYTHON_PEAK_NUMBER_COMPARISON = Channel.fromPath(params.peak_number_comparison_path) // Python code for generating MultiQC file ragarding peak numbers for different background subtraction threshold.

// Following four channels are R scripts for background subtraction.
R_01 = Channel.fromPath(params.R_01_path) 
R_02_THRESHOLD = Channel.fromPath(params.R_02_threshold_path)
R_02_BLANKBASED = Channel.fromPath(params.R_02_blankbased_path)
R_03_ANOVA = Channel.fromPath(params.R_03_anova_path)
R_03_KRUSKALWALLIS = Channel.fromPath(params.R_03_kruskalwallis_path)
R_04 = Channel.fromPath(params.R_04_path)

// Design files for positive data and negative data.
POS_DESIGN = Channel.fromPath(params.POS_design_path)
NEG_DESIGN = Channel.fromPath(params.NEG_design_path)

// Pre-build MultiQC report information
EXPERIMENTS_INFO = Channel.fromPath(params.experiments_info)
MQC_CONFIG = Channel.fromPath(params.mqc_config)

// Result files used by MultiQC to generate report.
MQC_DIR = Channel.fromPath(params.mqc_dir, type: 'dir')

/**
    Prints version when asked for
*/

if (params.version) {
    System.out.println("")
    System.out.println("METAGENOMIC PIPELINE FOR SUPERCOMPUTERS (MPS) - Version: $version ($timestamp)")
    exit 1
}

/**
    Prints help when asked for
*/

if (params.help) {
    System.out.println("")
    System.out.println("Metabolomics Pipeline for Suptercomputers (MPS) - Version: $version ($timestamp)")
    System.out.println("This pipeline is distributed in the hope that it will be useful")
    System.out.println("but WITHOUT ANY WARRANTY. See the GNU GPL v3.0 for more details.")
    System.out.println("")
    System.out.println("Please report comments and bugs to alessia.visconti@kcl.ac.uk")
    System.out.println("or at https://github.com/GalaxyDream/metabolomics_data_processing/issues.")
    System.out.println("Check https://github.com/GalaxyDream/metabolomics_data_processing for updates, and refer to")
    System.out.println("[wiki placeholder]")
    System.out.println("")
    System.out.println("Usage:  ")
    System.out.println("   nextflow run.nf [options] -with-docker galaxydream/mzmine_oldversion")
    System.out.println("")
    System.out.println("Arguments (it is mandatory to change `input_file` and `mzmine_dir` before running:")
    System.out.println("----------------------------- common parameters ----------------------------------")
    System.out.println("    --version                               whether to show version information or not, default is null")
    System.out.println("    --help                                  whether to show help information or not, default is null")
    System.out.println("    --input_dir_pos                         location of your input metabolomics data (positive part) folder")
    System.out.println("    --input_dir_neg                         location of your input metabolomics data (negative part) folder")
    System.out.println("    --mzmine_dir                            location of your MzMine software, here we use MzMine-2.28")
    System.out.println("    --library                               location of your customized library for matching matabolites")
    System.out.println("    --pos_config                            location of generated MzMine batchfile for positive data")
    System.out.println("    --neg_config                            location of generated MzMine batchfile for negative data")
    System.out.println("    --batchfile_generator                   location of the Python code for generating MzMine batchfile")
    System.out.println("    --mzmine_result_extraction              location of the Python code for reformating MzMine processed result so that those result files can be input appropriately to R scripts for background subtraction")
    System.out.println("    --raw_stats_merge_path                  location of the Python code for merging files of raw intension and the corresponding stats")
    System.out.println("    --venn_path                             location of the Python code for generating venn diagram")
    System.out.println("    --python_pca_path                       location of the Python code for generating PCA analysis result")
    System.out.println("    --data_info                             location of the Python code for generating file regarding data information that can be parsed by MultiQC")
    System.out.println("    --peak_number_comparison_path           location of the Python code for generating file that can be parsed by MultiQC regarding identified number of peaks corresponding to different background subtraction threshold")
    System.out.println("    --R_01_path                             Part of the R script for background subtraction")
    System.out.println("    --R_02_threshold_path                   Part of the R script for background subtraction")
    System.out.println("    --R_02_blankbased_path                  Part of the R script for background subtraction")
    System.out.println("    --R_03_anova_path                       Part of the R script for background subtraction")
    System.out.println("    --R_03_kruskalwallis_path               Part of the R script for background subtraction")
    System.out.println("    --R_04_path                             Part of the R script for background subtraction")
    System.out.println("    --mqc_dir                               path of the folder containing all files that need to be parsed by MultiQC to generate the report")
    System.out.println("    --pos_data_info_mqc                     name of the file ending with '.yaml' regarding positive data information that can be parsed by MultiQC")
    System.out.println("    --neg_data_info_mqc                     name of the file ending with '.yaml' regarding negative data information that can be parsed by MultiQC")
    System.out.println("    --POS_design_path                       location of the input file design file for positive data background subtraction")
    System.out.println("    --NEG_design_path                       location of the input file design file for negative data background subtraction")
    System.out.println("    --pos_nobg_ready                        name of the positive peak detection result (csv file) without background subtraction")
    System.out.println("    --neg_nobg_ready                        name of the negative peak detection result (csv file) without background subtraction")
    System.out.println("    --pos_005_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 005")
    System.out.println("    --neg_005_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 005")
    System.out.println("    --pos_100_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 100")
    System.out.println("    --neg_100_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 100")
    System.out.println("    --pos_200_withbg_ready                  name of the positive peak detection result (csv file) with a background subtraction threshold of 200")
    System.out.println("    --neg_200_withbg_ready                  name of the negative peak detection result (csv file) with a background subtraction threshold of 200")
    System.out.println("Please refer to nextflow.config for more options.")
    System.out.println("")
    System.out.println("Container:")
    System.out.println("    Docker image to use with -with-docker|-with-singularity options is")
    System.out.println("    'docker://galaxydream/bioconductor_metabolomics'")
    System.out.println("")
    System.out.println("MPS supports mzXML format files.")
    System.out.println("")
    exit 1
}

// Process for generating MultiQC report regarding data information
process mqc_data_info {

    publishDir './results/mqc/', mode: 'copy'

    input:
    file get_data_info from PYTHON_DATA_INFO // Python code for generating MultiQC file regarding data information including file name and file size.
    file pos_data_dir from POS_DATA_DIR // Location of positive data
    file neg_data_dir from NEG_DATA_DIR // Location of negative data


    // POS_DATA and NEG_DATA are channels containing filtered POS and NEG data, which are ready to be input to R codes.
    output:
    file params.pos_data_info_mqc into POS_DATA_INFO_MQC // file regarding positive data information that can be parsed by MultiQC
    file params.neg_data_info_mqc into NEG_DATA_INFO_MQC // file regarding negative data information that can be parsed by MultiQC

    shell:
    """
    python3 ${get_data_info} -i ${pos_data_dir} -o $params.pos_data_info_mqc -n p &&
    python3 ${get_data_info} -i ${neg_data_dir} -o $params.neg_data_info_mqc -n n
    """
}

process batchfile_generation_mzmine {


    input:
    file p from BATCHFILE_GENERATOR // This channel stores Python code (~/src/batchfile_generator.py) for generating MzMine batchfile, which enables us to run MzMine in batch mode. 

    output:
    file params.pos_config into POS_BATCHFILE // Generated batchfile for processing positive data
    file params.neg_config into NEG_BATCHFILE // Generated batchfile for processing negative data

    shell:
    """   
    python ${p} -x ${params.pos_config} -i $params.input_dir_pos -l $params.library -o $params.pos_mzmine_peak_output &&
    python ${p} -x ${params.neg_config} -i $params.input_dir_neg -l $params.library -o $params.neg_mzmine_peak_output

    """
}

process pos_peakDetection_mzmine {

    publishDir './results/', mode: 'copy'

    input:
    file p_b from POS_BATCHFILE // Batchfile for MzMine to process positive data.
    file p_m from POS_MZMINE // Folder of MzMine tool

    output:
    file "MZmine-2.28/${params.pos_mzmine_peak_output}" into POS_MZMINE_RESULT // MzMine processing result for positive data.

// Change "startMZmine_Linux.sh" to "startMZmine_MacOSX.command" in the following code if running locally with Mac

    shell:
    """   
    mv ${p_b} ${p_m} && ${p_m}/startMZmine_Linux.sh ${p_b}
    """
}

process neg_peakDetection_mzmine {

    publishDir './results/', mode: 'copy'

    echo true

    input:
    file n_b from NEG_BATCHFILE // Batchfile for MzMine to process negative data.
    file n_m from NEG_MZMINE // Folder of MzMine tool

    output:
    file "MZmine-2.28/${params.neg_mzmine_peak_output}" into NEG_MZMINE_RESULT // MzMine processing result for negative data.
    stdout result

// Change "startMZmine_Linux.sh" to "startMZmine_MacOSX.command" in the following code if running locally with Mac

    shell:
    """   
    mv ${n_b} ${n_m} && ${n_m}/startMZmine_Linux.sh ${n_b}
    """
}

// Filter the csv file generated by MzMine so that it can be input to R codes for background subtraction (e.g. rename columns and remove redundant columns).
process mzmine_result_filtering {

    input:
    file mzmine_result_extraction from MZMINE_RESULT_EXTRACTION // This channel stores Python code for formatting the result generated by MzMine enabling the intermidiate result to be feeded appropriately into background subtraction code.
    file pos_mzmine_result from POS_MZMINE_RESULT // MzMine processing result for positive data.
    file neg_mzmine_result from NEG_MZMINE_RESULT // MzMine processing result for negative data.


    // POS_DATA and NEG_DATA are channels containing re-formatted POS and NEG data, which are ready to be input to R codes for background subtraction.
    output:
    file params.POS_data_path into POS_DATA
    file params.NEG_data_path into NEG_DATA

    shell:
    """
    python3 ${mzmine_result_extraction} -i ${pos_mzmine_result} -o $params.POS_data_path -n p &&
    python3 ${mzmine_result_extraction} -i ${neg_mzmine_result} -o $params.NEG_data_path -n n
    """
}

POS_DATA.into{POS_DATA_BS; POS_DATA_MQC} // Duplicate POS_DATA into two, one of them for background subtraction, the other one for MultiQC report regarding number of peaks without background subtraction.
NEG_DATA.into{NEG_DATA_BS; NEG_DATA_MQC} // Duplicate NEG_DATA into two, one of them for background subtraction, the other one for MultiQC report regarding number of peaks without background subtraction.

// Background subtraction and statistical analysis are from p_R_01 to p_R_04
process p_R_01 {

    input:
    file r_01 from R_01
    file data_pos from POS_DATA_BS
    file design_pos from POS_DESIGN
    file data_neg from NEG_DATA_BS
    file design_neg from NEG_DESIGN

    output:
    file params.POS_Rdata_path into POS_RDATA_CHANNEL
    file params.POS_Rdesign_path into POS_RDESIGN_CHANNEL
    file params.NEG_Rdata_path into NEG_RDATA_CHANNEL
    file params.NEG_Rdesign_path into NEG_RDESIGN_CHANNEL
    file params.POS_Rdata_csv_path into POS_RAW_NOBG
    file params.NEG_Rdata_csv_path into NEG_RAW_NOBG

    shell:
    """   
    Rscript ${r_01} --input_POS_design ${design_pos} --input_NEG_design ${design_neg} --input_POS_data ${data_pos} --input_NEG_data ${data_neg} --output_POS_design ${params.POS_Rdesign_path} --output_NEG_design ${params.NEG_Rdesign_path} --output_POS_data ${params.POS_Rdata_path} --output_NEG_data ${params.NEG_Rdata_path} --output_POS_data_csv ${params.POS_Rdata_csv_path} --output_NEG_data_csv ${params.NEG_Rdata_csv_path}

    """
}

// split channel content for multiple-time use

POS_RDATA_CHANNEL.into{POS_RDATA_02_THRESHOLD; POS_RDATA_02_BLANKBASED; POS_RDATA_03_ANOVA; POS_RDATA_03_KRUSKALWALLIS; POS_RDATA_04}
POS_RDESIGN_CHANNEL.into{POS_RDESIGN_02_THRESHOLD; POS_RDESIGN_02_BLANKBASED; POS_RDESIGN_03_ANOVA; POS_RDESIGN_03_KRUSKALWALLIS}
NEG_RDATA_CHANNEL.into{NEG_RDATA_02_THRESHOLD; NEG_RDATA_02_BLANKBASED; NEG_RDATA_03_ANOVA; NEG_RDATA_03_KRUSKALWALLIS; NEG_RDATA_04}
NEG_RDESIGN_CHANNEL.into{NEG_RDESIGN_02_THRESHOLD; NEG_RDESIGN_02_BLANKBASED; NEG_RDESIGN_03_ANOVA; NEG_RDESIGN_03_KRUSKALWALLIS}

process p_R_02_thereshold {

    input:
    file r_02_threshold from R_02_THRESHOLD
    file pos_rdata from POS_RDATA_02_THRESHOLD
    file pos_rdesign from POS_RDESIGN_02_THRESHOLD
    file neg_rdata from NEG_RDATA_02_THRESHOLD
    file neg_rdesign from NEG_RDESIGN_02_THRESHOLD

    output:
    file params.output_POS_absolute into POS_ABSOLUTE_CHANNEL
    file params.output_NEG_absolute into NEG_ABSOLUTE_CHANNEL

    shell:
    """   
    Rscript ${r_02_threshold} --input_POS_design ${pos_rdesign} --input_NEG_design ${neg_rdesign} --input_POS_data ${pos_rdata} --input_NEG_data ${neg_rdata} --output_POS_absolute ${params.output_POS_absolute} --output_NEG_absolute ${params.output_NEG_absolute}

    """
}

process p_R_02_blankbased {

    input:
    file r_02_blankbased from R_02_BLANKBASED
    file pos_rdata from POS_RDATA_02_BLANKBASED
    file pos_rdesign from POS_RDESIGN_02_BLANKBASED
    file neg_rdata from NEG_RDATA_02_BLANKBASED
    file neg_rdesign from NEG_RDESIGN_02_BLANKBASED

    output:
    file params.output_POS_blankbased into POS_BLANKBASED_CHANNEL
    file params.output_NEG_blankbased into NEG_BLANKBASED_CHANNEL

    shell:
    """   
    Rscript ${r_02_blankbased} --input_POS_design ${pos_rdesign} --input_NEG_design ${neg_rdesign} --input_POS_data ${pos_rdata} --input_NEG_data ${neg_rdata} --output_POS_blankbased ${params.output_POS_blankbased} --output_NEG_blankbased ${params.output_NEG_blankbased}

    """
    
}

process p_R_03_anova {

    input:
    file r_03_anova from R_03_ANOVA
    file pos_rdata from POS_RDATA_03_ANOVA
    file pos_rdesign from POS_RDESIGN_03_ANOVA
    file neg_rdata from NEG_RDATA_03_ANOVA
    file neg_rdesign from NEG_RDESIGN_03_ANOVA

    output:
    file params.outputs_POS_anova into POS_ANOVA_CHANNEL
    file params.outputs_NEG_anova into NEG_ANOVA_CHANNEL

    shell:
    """   
    Rscript ${r_03_anova} --input_POS_design ${pos_rdesign} --input_NEG_design ${neg_rdesign} --input_POS_data ${pos_rdata} --input_NEG_data ${neg_rdata} --output_POS_anova ${params.outputs_POS_anova} --output_NEG_anova ${params.outputs_NEG_anova}

    """
    
}

process p_R_03_kruskalwallis {

    input:
    file r_03_kruskalwallis from R_03_KRUSKALWALLIS
    file pos_rdata from POS_RDATA_03_KRUSKALWALLIS
    file pos_rdesign from POS_RDESIGN_03_KRUSKALWALLIS
    file neg_rdata from NEG_RDATA_03_KRUSKALWALLIS
    file neg_rdesign from NEG_RDESIGN_03_KRUSKALWALLIS

    output:
    file params.outputs_POS_kruskalwallis into POS_KRUSKALWALLIS_CHANNEL
    file params.outputs_NEG_kruskalwallis into NEG_KRUSKALWALLIS_CHANNEL

    shell:
    """   
    Rscript ${r_03_kruskalwallis} --input_POS_design ${pos_rdesign} --input_NEG_design ${neg_rdesign} --input_POS_data ${pos_rdata} --input_NEG_data ${neg_rdata} --output_POS_kruskalwallis ${params.outputs_POS_kruskalwallis} --output_NEG_kruskalwallis ${params.outputs_NEG_kruskalwallis}

    """
    
}

process p_R_04 {

    input:
    file r_04 from R_04
    file pos_rdata from POS_RDATA_04
    file neg_rdata from NEG_RDATA_04
    file pos_blankbased from POS_BLANKBASED_CHANNEL
    file neg_blankbased from NEG_BLANKBASED_CHANNEL
    file pos_anova from POS_ANOVA_CHANNEL
    file neg_anova from NEG_ANOVA_CHANNEL
    file pos_kruskalwallis from POS_KRUSKALWALLIS_CHANNEL
    file neg_kruskalwallis from NEG_KRUSKALWALLIS_CHANNEL

    output:
    file params.output_POS_allgroups_threshold_005 into POS_ALLGROUPS_THRESHOLD_005_CHANNEL
    file params.output_NEG_allgroups_threshold_005 into NEG_ALLGROUPS_THRESHOLD_005_CHANNEL
    file params.output_POS_allgroups_threshold_100 into POS_ALLGROUPS_THRESHOLD_100_CHANNEL
    file params.output_NEG_allgroups_threshold_100 into NEG_ALLGROUPS_THRESHOLD_100_CHANNEL
    file params.output_POS_allgroups_threshold_200 into POS_ALLGROUPS_THRESHOLD_200_CHANNEL
    file params.output_NEG_allgroups_threshold_200 into NEG_ALLGROUPS_THRESHOLD_200_CHANNEL
    file params.output_POS_raw_filtered_005 into POS_RAW_FILTERED_005
    file params.output_NEG_raw_filtered_005 into NEG_RAW_FILTERED_005
    file params.output_POS_raw_filtered_100 into POS_RAW_FILTERED_100
    file params.output_NEG_raw_filtered_100 into NEG_RAW_FILTERED_100
    file params.output_POS_raw_filtered_200 into POS_RAW_FILTERED_200
    file params.output_NEG_raw_filtered_200 into NEG_RAW_FILTERED_200
    file params.output_POS_allgroups_anova into POS_ALLGROUPS_ANOVA_CHANNEL
    file params.output_POS_allgroups_kruskalwallis into POS_ALLGROUPS_KRUSKALWALLIS_CHANNEL
    file params.output_POS_allgroups_combination into POS_ALLGROUPS_COMBINATION_CHANNEL
    file params.output_NEG_allgroups_anova into NEG_ALLGROUPS_ANOVA_CHANNEL
    file params.output_NEG_allgroups_kruskalwallis into NEG_ALLGROUPS_KRUSKALWALLIS_CHANNEL
    file params.output_NEG_allgroups_combination into NEG_ALLGROUPS_COMBINATION_CHANNEL
    file params.output_POS_allgroups_combination_005 into POS_ALLGROUPS_COMBINATION_005_CHANNEL
    file params.output_NEG_allgroups_combination_005 into NEG_ALLGROUPS_COMBINATION_005_CHANNEL
    file params.output_POS_allgroups_combination_100 into POS_ALLGROUPS_COMBINATION_100_CHANNEL
    file params.output_NEG_allgroups_combination_100 into NEG_ALLGROUPS_COMBINATION_100_CHANNEL
    file params.output_POS_allgroups_combination_200 into POS_ALLGROUPS_COMBINATION_200_CHANNEL
    file params.output_NEG_allgroups_combination_200 into NEG_ALLGROUPS_COMBINATION_200_CHANNEL
    file params.output_POS_summaries_complete into POS_STATS_NOBG
    file params.output_NEG_summaries_complete into NEG_STATS_NOBG

    shell:
    """   
    Rscript ${r_04} --input_POS_data ${pos_rdata} --input_NEG_data ${neg_rdata} --input_POS_blankbased ${pos_blankbased} --input_NEG_blankbased ${neg_blankbased} --input_POS_anova ${pos_anova} --input_NEG_anova ${neg_anova} --input_POS_kruskalwallis ${pos_kruskalwallis} --input_NEG_kruskalwallis ${neg_kruskalwallis} --output_POS_allgroups_threshold_005 ${params.output_POS_allgroups_threshold_005} --output_NEG_allgroups_threshold_005 ${params.output_NEG_allgroups_threshold_005} --output_POS_allgroups_threshold_100 ${params.output_POS_allgroups_threshold_100} --output_NEG_allgroups_threshold_100 ${params.output_NEG_allgroups_threshold_100} --output_POS_allgroups_threshold_200 ${params.output_POS_allgroups_threshold_200} --output_NEG_allgroups_threshold_200 ${params.output_NEG_allgroups_threshold_200} --output_POS_raw_filtered_005 ${params.output_POS_raw_filtered_005} --output_POS_raw_filtered_100 ${params.output_POS_raw_filtered_100} --output_POS_raw_filtered_200 ${params.output_POS_raw_filtered_200} --output_NEG_raw_filtered_005 ${params.output_NEG_raw_filtered_005} --output_NEG_raw_filtered_100 ${params.output_NEG_raw_filtered_100} --output_NEG_raw_filtered_200 ${params.output_NEG_raw_filtered_200} --output_POS_allgroups_anova ${params.output_POS_allgroups_anova} --output_POS_allgroups_kruskalwallis ${params.output_POS_allgroups_kruskalwallis} --output_POS_allgroups_combination ${params.output_POS_allgroups_combination} --output_NEG_allgroups_anova ${params.output_NEG_allgroups_anova} --output_NEG_allgroups_kruskalwallis ${params.output_NEG_allgroups_kruskalwallis} --output_NEG_allgroups_combination ${params.output_NEG_allgroups_combination} --output_POS_allgroups_combination_005 ${params.output_POS_allgroups_combination_005} --output_NEG_allgroups_combination_005 ${params.output_NEG_allgroups_combination_005} --output_POS_allgroups_combination_100 ${params.output_POS_allgroups_combination_100} --output_NEG_allgroups_combination_100 ${params.output_NEG_allgroups_combination_100} --output_POS_allgroups_combination_200 ${params.output_POS_allgroups_combination_200} --output_NEG_allgroups_combination_200 ${params.output_NEG_allgroups_combination_200} --output_POS_summaries_complete ${params.output_POS_summaries_complete} --output_NEG_summaries_complete ${params.output_NEG_summaries_complete}

    """
    
}

POS_ALLGROUPS_THRESHOLD_005_CHANNEL.into{POS_ALLGROUPS_THRESHOLD_005_CHANNEL_MERGE; POS_ALLGROUPS_THRESHOLD_005_CHANNEL_MQC}
NEG_ALLGROUPS_THRESHOLD_005_CHANNEL.into{NEG_ALLGROUPS_THRESHOLD_005_CHANNEL_MERGE; NEG_ALLGROUPS_THRESHOLD_005_CHANNEL_MQC}
POS_ALLGROUPS_THRESHOLD_100_CHANNEL.into{POS_ALLGROUPS_THRESHOLD_100_CHANNEL_MERGE; POS_ALLGROUPS_THRESHOLD_100_CHANNEL_MQC}
NEG_ALLGROUPS_THRESHOLD_100_CHANNEL.into{NEG_ALLGROUPS_THRESHOLD_100_CHANNEL_MERGE; NEG_ALLGROUPS_THRESHOLD_100_CHANNEL_MQC}
POS_ALLGROUPS_THRESHOLD_200_CHANNEL.into{POS_ALLGROUPS_THRESHOLD_200_CHANNEL_MERGE; POS_ALLGROUPS_THRESHOLD_200_CHANNEL_MQC}
NEG_ALLGROUPS_THRESHOLD_200_CHANNEL.into{NEG_ALLGROUPS_THRESHOLD_200_CHANNEL_MERGE; NEG_ALLGROUPS_THRESHOLD_200_CHANNEL_MQC}

// Process for generating files that can be parsed by MultiQC regarding peak numbers when using different background subtraction threshold.
process mqc_peak_number_comparison {

    publishDir './results/mqc/', mode: 'copy'

    input:
    file get_peak_number_comparison from PYTHON_PEAK_NUMBER_COMPARISON
    file pos_nobg from POS_DATA_MQC
    file neg_nobg from NEG_DATA_MQC
    file pos_005 from POS_ALLGROUPS_THRESHOLD_005_CHANNEL_MQC
    file neg_005 from NEG_ALLGROUPS_THRESHOLD_005_CHANNEL_MQC
    file pos_100 from POS_ALLGROUPS_THRESHOLD_100_CHANNEL_MQC
    file neg_100 from NEG_ALLGROUPS_THRESHOLD_100_CHANNEL_MQC
    file pos_200 from POS_ALLGROUPS_THRESHOLD_200_CHANNEL_MQC
    file neg_200 from NEG_ALLGROUPS_THRESHOLD_200_CHANNEL_MQC

    output:
    file params.peak_number_comparison_mqc into PEAK_NUMBER_COMPARISON_MQC

    shell:
    '''
    python3 !{get_peak_number_comparison} -i1 $(cat !{pos_nobg} | wc -l) -i2 $(cat !{neg_nobg} | wc -l) -i3 $(cat !{pos_005} | wc -l) -i4 $(cat !{neg_005} | wc -l) -i5 $(cat !{pos_100} | wc -l) -i6 $(cat !{neg_100} | wc -l) -i7 $(cat !{pos_200} | wc -l) -i8 $(cat !{neg_200} | wc -l) -o !{params.peak_number_comparison_mqc}
    '''
}

// Process for merging raw intension file with stats file of "no background subtraction"
process raw_stats_merge_nobg {
    
    publishDir './results/R_outputs/', mode: 'copy'

    input:
    file python_raw_stats_merge from PYTHON_RAW_STATS_MERGE_NOBG
    file pos_stats_nobg from POS_STATS_NOBG
    file neg_stats_nobg from NEG_STATS_NOBG
    file pos_raw_nobg from POS_RAW_NOBG
    file neg_raw_nobg from NEG_RAW_NOBG


    output:
    file params.pos_nobg_ready into POS_NOBG_READY
    file params.neg_nobg_ready into NEG_NOBG_READY
    
    shell:
    """   
    python3 ${python_raw_stats_merge} -ir ${pos_raw_nobg} -is ${pos_stats_nobg} -o ${params.pos_nobg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${neg_raw_nobg} -is ${neg_stats_nobg} -o ${params.neg_nobg_ready}

    """
}

POS_NOBG_READY.into{POS_NOBG_READY_PCA; POS_NOBG_READY_VENN; POS_NOBG_READY_H_CLUSTERING; POS_NOBG_READY_BARPLOT}
NEG_NOBG_READY.into{NEG_NOBG_READY_PCA; NEG_NOBG_READY_VENN; NEG_NOBG_READY_H_CLUSTERING; NEG_NOBG_READY_BARPLOT}


// Process for merging raw intension file with stats file of "with background subtraction"
process raw_stats_merge_withbg {
    
    publishDir './results/R_outputs/', mode: 'copy'

    input:
    file python_raw_stats_merge from PYTHON_RAW_STATS_MERGE_WITHBG
    file pos_005_raw from POS_RAW_FILTERED_005
    file pos_100_raw from POS_RAW_FILTERED_100
    file pos_200_raw from POS_RAW_FILTERED_200
    file neg_005_raw from NEG_RAW_FILTERED_005
    file neg_100_raw from NEG_RAW_FILTERED_100
    file neg_200_raw from NEG_RAW_FILTERED_200
    file pos_005_stats from POS_ALLGROUPS_THRESHOLD_005_CHANNEL_MERGE
    file pos_100_stats from POS_ALLGROUPS_THRESHOLD_100_CHANNEL_MERGE
    file pos_200_stats from POS_ALLGROUPS_THRESHOLD_200_CHANNEL_MERGE
    file neg_005_stats from NEG_ALLGROUPS_THRESHOLD_005_CHANNEL_MERGE
    file neg_100_stats from NEG_ALLGROUPS_THRESHOLD_100_CHANNEL_MERGE
    file neg_200_stats from NEG_ALLGROUPS_THRESHOLD_200_CHANNEL_MERGE

    output:
    file params.pos_005_withbg_ready into POS_005_WITHBG_READY
    file params.pos_100_withbg_ready into POS_100_WITHBG_READY
    file params.pos_200_withbg_ready into POS_200_WITHBG_READY
    file params.neg_005_withbg_ready into NEG_005_WITHBG_READY
    file params.neg_100_withbg_ready into NEG_100_WITHBG_READY
    file params.neg_200_withbg_ready into NEG_200_WITHBG_READY

    
    shell:
    """   
    python3 ${python_raw_stats_merge} -ir ${pos_005_raw} -is ${pos_005_stats} -o ${params.pos_005_withbg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${pos_100_raw} -is ${pos_100_stats} -o ${params.pos_100_withbg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${pos_005_raw} -is ${pos_200_stats} -o ${params.pos_200_withbg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${neg_005_raw} -is ${neg_005_stats} -o ${params.neg_005_withbg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${neg_100_raw} -is ${neg_100_stats} -o ${params.neg_100_withbg_ready} &&
    python3 ${python_raw_stats_merge} -ir ${neg_005_raw} -is ${neg_200_stats} -o ${params.neg_200_withbg_ready}

    """
}

POS_005_WITHBG_READY.into{POS_005_WITHBG_READY_PCA; POS_005_WITHBG_READY_VENN; POS_005_WITHBG_READY_H_CLUSTERING; POS_005_WITHBG_READY_BARPLOT;}
POS_100_WITHBG_READY.into{POS_100_WITHBG_READY_PCA; POS_100_WITHBG_READY_VENN; POS_100_WITHBG_READY_H_CLUSTERING; POS_100_WITHBG_READY_BARPLOT;}
POS_200_WITHBG_READY.into{POS_200_WITHBG_READY_PCA; POS_200_WITHBG_READY_VENN; POS_200_WITHBG_READY_H_CLUSTERING; POS_200_WITHBG_READY_BARPLOT;}
NEG_005_WITHBG_READY.into{NEG_005_WITHBG_READY_PCA; NEG_005_WITHBG_READY_VENN; NEG_005_WITHBG_READY_H_CLUSTERING; NEG_005_WITHBG_READY_BARPLOT;}
NEG_100_WITHBG_READY.into{NEG_100_WITHBG_READY_PCA; NEG_100_WITHBG_READY_VENN; NEG_100_WITHBG_READY_H_CLUSTERING; NEG_100_WITHBG_READY_BARPLOT;}
NEG_200_WITHBG_READY.into{NEG_200_WITHBG_READY_PCA; NEG_200_WITHBG_READY_VENN; NEG_200_WITHBG_READY_H_CLUSTERING; NEG_200_WITHBG_READY_BARPLOT;}

// process for PCA of "no background subtraction" results
process pca_nobg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file pos_csv_data from POS_NOBG_READY_PCA
    file neg_csv_data from NEG_NOBG_READY_PCA
    file python_pca from PYTHON_PCA_NOBG

    output:
    file params.pca_POS_nobg into PCA_POS_NOBG_CHANNEL
    file params.pca_NEG_nobg into PCA_NEG_NOBG_CHANNEL

    shell:
    """   
    python3 ${python_pca} -i ${pos_csv_data} -o ${params.pca_POS_nobg} -n p &&
    python3 ${python_pca} -i ${neg_csv_data} -o ${params.pca_NEG_nobg} -n n

    """

}

// process for PCA of "with background subtraction" results, here we use 100 as the threshold of background subtraction.
process pca_withbg {
    
    publishDir './results/figs', mode: 'copy'

    input:
    file pos_filtered_data_100 from POS_100_WITHBG_READY_PCA
    file neg_filtered_data_100 from NEG_100_WITHBG_READY_PCA
    file python_pca from PYTHON_PCA_WITHBG

    output:
    file params.pca_POS_withbg into PCA_POS_WITHBG_CHANNEL
    file params.pca_NEG_withbg into PCA_NEG_WITHBG_CHANNEL

    shell:
    """   
    python3 ${python_pca} -i ${pos_filtered_data_100} -o ${params.pca_POS_withbg} -n p &&
    python3 ${python_pca} -i ${neg_filtered_data_100} -o ${params.pca_NEG_withbg} -n n

    """

}

// process for venn diagram of "no background subtraction" results, here we use 100 as the threshold of background subtraction.
process venn_diagram_nobg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_venn from PYTHON_VENN_NOBG
    file pos_nobg_ready from POS_NOBG_READY_VENN
    file neg_nobg_ready from NEG_NOBG_READY_VENN

    output:
    file params.pos_venn_nobg into POS_VENN_NOBG
    file params.neg_venn_nobg into NEG_VENN_NOBG
    file params.pos_venn_group1_nobg into POS_VENN_GROUP1_NOBG
    file params.pos_venn_group2_nobg into POS_VENN_GROUP2_NOBG
    file params.pos_venn_group3_nobg into POS_VENN_GROUP3_NOBG
    file params.neg_venn_group1_nobg into NEG_VENN_GROUP1_NOBG
    file params.neg_venn_group2_nobg into NEG_VENN_GROUP2_NOBG
    file params.neg_venn_group3_nobg into NEG_VENN_GROUP3_NOBG

    shell:
    """   
    python3 ${python_venn} -i ${pos_nobg_ready} -o ${params.pos_venn_nobg} -g1 ${params.pos_venn_group1_nobg} -g2 ${params.pos_venn_group2_nobg} -g3 ${params.pos_venn_group3_nobg} &&
    python3 ${python_venn} -i ${neg_nobg_ready} -o ${params.neg_venn_nobg} -g1 ${params.neg_venn_group1_nobg} -g2 ${params.neg_venn_group2_nobg} -g3 ${params.neg_venn_group3_nobg}

    """
}

// process for venn diagram of "with background subtraction" results, here we use 100 as the threshold of background subtraction.
process venn_diagram_withbg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_venn from PYTHON_VENN_WITHBG
    file pos_100_withbg_ready from POS_100_WITHBG_READY_VENN
    file neg_100_withbg_ready from NEG_100_WITHBG_READY_VENN

    output:
    file params.pos_venn_withbg into POS_VENN_WITHBG
    file params.neg_venn_withbg into NEG_VENN_WITHBG
    file params.pos_venn_group1_withbg into POS_VENN_GROUP1_WITHBG
    file params.pos_venn_group2_withbg into POS_VENN_GROUP2_WITHBG
    file params.pos_venn_group3_withbg into POS_VENN_GROUP3_WITHBG
    file params.neg_venn_group1_withbg into NEG_VENN_GROUP1_WITHBG
    file params.neg_venn_group2_withbg into NEG_VENN_GROUP2_WITHBG
    file params.neg_venn_group3_withbg into NEG_VENN_GROUP3_WITHBG

    shell:
    """   
    python3 ${python_venn} -i ${pos_100_withbg_ready} -o ${params.pos_venn_withbg} -g1 ${params.pos_venn_group1_withbg} -g2 ${params.pos_venn_group2_withbg} -g3 ${params.pos_venn_group3_withbg} &&
    python3 ${python_venn} -i ${neg_100_withbg_ready} -o ${params.neg_venn_withbg} -g1 ${params.neg_venn_group1_withbg} -g2 ${params.neg_venn_group2_withbg} -g3 ${params.neg_venn_group3_withbg}

    """
}

process h_clustering_nobg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_h_clustering from PYTHON_H_CLUSTERING_NOBG
    file pos_nobg_ready from POS_NOBG_READY_H_CLUSTERING
    file neg_nobg_ready from NEG_NOBG_READY_H_CLUSTERING

    output:
    file params.pos_h_clustering_group1_nobg into POS_H_CLUSTERING_GROUP1_NOBG
    file params.pos_h_clustering_group2_nobg into POS_H_CLUSTERING_GROUP2_NOBG
    file params.pos_h_clustering_group3_nobg into POS_H_CLUSTERING_GROUP3_NOBG
    file params.neg_h_clustering_group1_nobg into NEG_H_CLUSTERING_GROUP1_NOBG
    file params.neg_h_clustering_group2_nobg into NEG_H_CLUSTERING_GROUP2_NOBG
    file params.neg_h_clustering_group3_nobg into NEG_H_CLUSTERING_GROUP3_NOBG

    shell:
    """   
    python3 ${python_h_clustering} -i ${pos_nobg_ready} -n p -f1 ${params.pos_h_clustering_group1_nobg} -f2 ${params.pos_h_clustering_group2_nobg} -f3 ${params.pos_h_clustering_group3_nobg} &&
    python3 ${python_h_clustering} -i ${neg_nobg_ready} -n n -f1 ${params.neg_h_clustering_group1_nobg} -f2 ${params.neg_h_clustering_group2_nobg} -f3 ${params.neg_h_clustering_group3_nobg}

    """
}

process h_clustering_withbg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_h_clustering from PYTHON_H_CLUSTERING_WITHBG
    file pos_100_withbg_ready from POS_100_WITHBG_READY_H_CLUSTERING
    file neg_100_withbg_ready from NEG_100_WITHBG_READY_H_CLUSTERING

    output:
    file params.pos_h_clustering_group1_withbg into POS_H_CLUSTERING_GROUP1_WITHBG
    file params.pos_h_clustering_group2_withbg into POS_H_CLUSTERING_GROUP2_WITHBG
    file params.pos_h_clustering_group3_withbg into POS_H_CLUSTERING_GROUP3_WITHBG
    file params.neg_h_clustering_group1_withbg into NEG_H_CLUSTERING_GROUP1_WITHBG
    file params.neg_h_clustering_group2_withbg into NEG_H_CLUSTERING_GROUP2_WITHBG
    file params.neg_h_clustering_group3_withbg into NEG_H_CLUSTERING_GROUP3_WITHBG

    shell:
    """   
    python3 ${python_h_clustering} -i ${pos_100_withbg_ready} -n p -f1 ${params.pos_h_clustering_group1_withbg} -f2 ${params.pos_h_clustering_group2_withbg} -f3 ${params.pos_h_clustering_group3_withbg} &&
    python3 ${python_h_clustering} -i ${neg_100_withbg_ready} -n n -f1 ${params.neg_h_clustering_group1_withbg} -f2 ${params.neg_h_clustering_group2_withbg} -f3 ${params.neg_h_clustering_group3_withbg}
    """
}

process barplot_nobg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_barplot from PYTHON_BARPLOT_NOBG
    file pos_nobg_ready from POS_NOBG_READY_BARPLOT
    file neg_nobg_ready from NEG_NOBG_READY_BARPLOT

    output:
    file params.pos_barplot_group1_nobg into POS_BARPLOT_GROUP1_NOBG
    file params.pos_barplot_group2_nobg into POS_BARPLOT_GROUP2_NOBG
    file params.pos_barplot_group3_nobg into POS_BARPLOT_GROUP3_NOBG
    file params.neg_barplot_group1_nobg into NEG_BARPLOT_GROUP1_NOBG
    file params.neg_barplot_group2_nobg into NEG_BARPLOT_GROUP2_NOBG
    file params.neg_barplot_group3_nobg into NEG_BARPLOT_GROUP3_NOBG

    shell:
    """   
    python3 ${python_barplot} -i ${pos_nobg_ready} -f1 ${params.pos_barplot_group1_nobg} -f2 ${params.pos_barplot_group2_nobg} -f3 ${params.pos_barplot_group3_nobg} &&
    python3 ${python_barplot} -i ${neg_nobg_ready} -f1 ${params.neg_barplot_group1_nobg} -f2 ${params.neg_barplot_group2_nobg} -f3 ${params.neg_barplot_group3_nobg}

    """
}

process barplot_withbg {

    publishDir './results/figs', mode: 'copy'

    input:
    file python_barplot from PYTHON_BARPLOT_WITHBG
    file pos_100_withbg_ready from POS_100_WITHBG_READY_BARPLOT
    file neg_100_withbg_ready from NEG_100_WITHBG_READY_BARPLOT

    output:
    file params.pos_barplot_group1_withbg into POS_BARPLOT_GROUP1_WITHBG
    file params.pos_barplot_group2_withbg into POS_BARPLOT_GROUP2_WITHBG
    file params.pos_barplot_group3_withbg into POS_BARPLOT_GROUP3_WITHBG
    file params.neg_barplot_group1_withbg into NEG_BARPLOT_GROUP1_WITHBG
    file params.neg_barplot_group2_withbg into NEG_BARPLOT_GROUP2_WITHBG
    file params.neg_barplot_group3_withbg into NEG_BARPLOT_GROUP3_WITHBG

    shell:
    """   
    python3 ${python_barplot} -i ${pos_100_withbg_ready} -f1 ${params.pos_barplot_group1_withbg} -f2 ${params.pos_barplot_group2_withbg} -f3 ${params.pos_barplot_group3_withbg} &&
    python3 ${python_barplot} -i ${neg_100_withbg_ready} -f1 ${params.neg_barplot_group1_withbg} -f2 ${params.neg_barplot_group2_withbg} -f3 ${params.neg_barplot_group3_withbg}

    """
}

process mqc_figs {

    publishDir './results/mqc/', mode: 'copy'

    input:
    file pca_pos_nobg from PCA_POS_NOBG_CHANNEL
    file pca_neg_nobg from PCA_NEG_NOBG_CHANNEL
    file pca_pos_withbg from PCA_POS_WITHBG_CHANNEL
    file pca_neg_withbg from PCA_NEG_WITHBG_CHANNEL
    file pos_venn_nobg from POS_VENN_NOBG
    file neg_venn_nobg from NEG_VENN_NOBG
    file pos_venn_withbg from POS_VENN_WITHBG
    file neg_venn_withbg from NEG_VENN_WITHBG
    file pos_h_clustering_group1_nobg from POS_H_CLUSTERING_GROUP1_NOBG
    file pos_h_clustering_group2_nobg from POS_H_CLUSTERING_GROUP2_NOBG
    file pos_h_clustering_group3_nobg from POS_H_CLUSTERING_GROUP3_NOBG
    file neg_h_clustering_group1_nobg from NEG_H_CLUSTERING_GROUP1_NOBG
    file neg_h_clustering_group2_nobg from NEG_H_CLUSTERING_GROUP2_NOBG
    file neg_h_clustering_group3_nobg from NEG_H_CLUSTERING_GROUP3_NOBG
    file pos_h_clustering_group1_withbg from POS_H_CLUSTERING_GROUP1_WITHBG
    file pos_h_clustering_group2_withbg from POS_H_CLUSTERING_GROUP2_WITHBG
    file pos_h_clustering_group3_withbg from POS_H_CLUSTERING_GROUP3_WITHBG
    file neg_h_clustering_group1_withbg from NEG_H_CLUSTERING_GROUP1_WITHBG
    file neg_h_clustering_group2_withbg from NEG_H_CLUSTERING_GROUP2_WITHBG
    file neg_h_clustering_group3_withbg from NEG_H_CLUSTERING_GROUP3_WITHBG
    file pos_barplot_group1_nobg from POS_BARPLOT_GROUP1_NOBG
    file pos_barplot_group2_nobg from POS_BARPLOT_GROUP2_NOBG
    file pos_barplot_group3_nobg from POS_BARPLOT_GROUP3_NOBG
    file neg_barplot_group1_nobg from NEG_BARPLOT_GROUP1_NOBG
    file neg_barplot_group2_nobg from NEG_BARPLOT_GROUP2_NOBG
    file neg_barplot_group3_nobg from NEG_BARPLOT_GROUP3_NOBG
    file pos_barplot_group1_withbg from POS_BARPLOT_GROUP1_WITHBG
    file pos_barplot_group2_withbg from POS_BARPLOT_GROUP2_WITHBG
    file pos_barplot_group3_withbg from POS_BARPLOT_GROUP3_WITHBG
    file neg_barplot_group1_withbg from NEG_BARPLOT_GROUP1_WITHBG
    file neg_barplot_group2_withbg from NEG_BARPLOT_GROUP2_WITHBG
    file neg_barplot_group3_withbg from NEG_BARPLOT_GROUP3_WITHBG

    output:
    file "*.png" into MQC_FIGS

    shell:
    """
    mv $pca_pos_nobg "PCA_for_positive_no_background_subtraction_mqc.png" &&
    mv $pca_neg_nobg "PCA_for_negative_no_background_subtraction_mqc.png" &&
    mv $pca_pos_withbg "PCA_for_positive_with_background_subtraction_mqc.png" &&
    mv $pca_neg_withbg "PCA_for_negative_with_background_subtraction_mqc.png" &&
    mv $pos_venn_nobg "Venn_Diagram_for_positive_no_background_subtraction_mqc.png" &&
    mv $neg_venn_nobg "Venn_Diagram_for_negative_no_background_subtraction_mqc.png" &&
    mv $pos_venn_withbg "Venn_Diagram_for_positive_with_background_subtraction_mqc.png" &&
    mv $neg_venn_withbg "Venn_Diagram_for_negative_with_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group1_nobg "H_Clustering_for_positive_fat_no_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group2_nobg "H_Clustering_for_positive_whole_no_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group3_nobg "H_Clustering_for_positive_skim_no_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group1_nobg "H_Clustering_for_negative_fat_no_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group2_nobg "H_Clustering_for_negative_whole_no_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group3_nobg "H_Clustering_for_negative_skim_no_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group1_withbg "H_Clustering_for_positive_fat_with_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group2_withbg "H_Clustering_for_positive_whole_with_background_subtraction_mqc.png" &&
    mv $pos_h_clustering_group3_withbg "H_Clustering_for_positive_skim_with_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group1_withbg "H_Clustering_for_negative_fat_with_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group2_withbg "H_Clustering_for_negative_whole_with_background_subtraction_mqc.png" &&
    mv $neg_h_clustering_group3_withbg "H_Clustering_for_negative_skim_with_background_subtraction_mqc.png" &&
    mv $pos_barplot_group1_nobg "barplot_for_positive_fat_no_background_subtraction_mqc.png" &&
    mv $pos_barplot_group2_nobg "barplot_for_positive_whole_no_background_subtraction_mqc.png" &&
    mv $pos_barplot_group3_nobg "barplot_for_positive_skim_no_background_subtraction_mqc.png" &&
    mv $neg_barplot_group1_nobg "barplot_for_negative_fat_no_background_subtraction_mqc.png" &&
    mv $neg_barplot_group2_nobg "barplot_for_negative_whole_no_background_subtraction_mqc.png" &&
    mv $neg_barplot_group3_nobg "barplot_for_negative_skim_no_background_subtraction_mqc.png" &&
    mv $pos_barplot_group1_withbg "barplot_for_positive_fat_with_background_subtraction_mqc.png" &&
    mv $pos_barplot_group2_withbg "barplot_for_positive_whole_with_background_subtraction_mqc.png" &&
    mv $pos_barplot_group3_withbg "barplot_for_positive_skim_with_background_subtraction_mqc.png" &&
    mv $neg_barplot_group1_withbg "barplot_for_negative_fat_with_background_subtraction_mqc.png" &&
    mv $neg_barplot_group2_withbg "barplot_for_negative_whole_with_background_subtraction_mqc.png" &&
    mv $neg_barplot_group3_withbg "barplot_for_negative_skim_with_background_subtraction_mqc.png"
    """
}

// Process for running MultiQC and generating the report.
process report_generator {

    publishDir './results/mqc/', mode: 'copy'

    input:
//    file mqc_dir from MQC_DIR
    file pos_data_info_mqc from POS_DATA_INFO_MQC
    file neg_data_info_mqc from NEG_DATA_INFO_MQC
    file experiments_info from EXPERIMENTS_INFO
    file mqc_config from MQC_CONFIG
    file peak_number_comparison_mqc from PEAK_NUMBER_COMPARISON_MQC
    file '*' from MQC_FIGS

    output:
    file "multiqc_report.html" into MULTIQC_REPORT

    shell:
    """
    multiqc .
    """

}
